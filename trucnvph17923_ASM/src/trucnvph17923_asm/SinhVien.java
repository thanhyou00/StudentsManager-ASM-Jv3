package trucnvph17923_asm;

import java.awt.Image;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Vector;
import java.util.regex.Pattern;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Nguyen Truc
 */
public class SinhVien extends javax.swing.JFrame {

    private String urlDB = "jdbc:sqlserver://localhost:1433;databaseName=FPT_DAOTAO";
    private DefaultTableModel _model = new DefaultTableModel();
    private static String usersName = "sa";
    private static String password = "vip123456789";
    private int _index = 0;
    private String picture = "";
    private Connection conn;

    public SinhVien() {
        initComponents();
        _model = (DefaultTableModel) tblsvien.getModel();
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        loadDatatoTable();
        _index = 0;
        showForm();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtmasv = new javax.swing.JTextField();
        txtname = new javax.swing.JTextField();
        txtemail = new javax.swing.JTextField();
        txtsdt = new javax.swing.JTextField();
        rdonam = new javax.swing.JRadioButton();
        rdonu = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtdchi = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        lblimg = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblsvien = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        btnsave = new javax.swing.JButton();
        btnupdate = new javax.swing.JButton();
        btnnew = new javax.swing.JButton();
        btndelete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("QUẢN LÝ SINH VIÊN");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 153));
        jLabel1.setText("QUẢN LÝ SINH VIÊN");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel2.setText("Mã sinh viên");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel3.setText("Họ tên");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel4.setText("Email");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel5.setText("Số điện thoại");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel6.setText("Giới tính");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel7.setText("Địa chỉ");

        txtsdt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtsdtActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdonam);
        rdonam.setSelected(true);
        rdonam.setText("Nam");

        buttonGroup1.add(rdonu);
        rdonu.setText("Nữ");

        txtdchi.setColumns(20);
        txtdchi.setRows(5);
        jScrollPane1.setViewportView(txtdchi);

        jPanel1.setBackground(new java.awt.Color(45, 152, 218));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblimg.setBackground(new java.awt.Color(45, 152, 218));
        lblimg.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblimg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/truc.png"))); // NOI18N
        lblimg.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblimg.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblimgMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblimg, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblimg, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 255, Short.MAX_VALUE)
        );

        tblsvien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã sinh viên", "Họ tên", "Email", "Số điện thoại", "Giới tính", "Địa chỉ", "Hình"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblsvien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblsvienMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblsvien);

        jPanel2.setBackground(new java.awt.Color(45, 152, 218));

        btnsave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Save as.png"))); // NOI18N
        btnsave.setText("Save");
        btnsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsaveActionPerformed(evt);
            }
        });

        btnupdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Refresh.png"))); // NOI18N
        btnupdate.setText("Update");
        btnupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdateActionPerformed(evt);
            }
        });

        btnnew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Add.png"))); // NOI18N
        btnnew.setText("New");
        btnnew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnnewActionPerformed(evt);
            }
        });

        btndelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Trash.png"))); // NOI18N
        btndelete.setText("Delete");
        btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnnew)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                        .addComponent(btnsave))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(btndelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnupdate)))
                .addContainerGap())
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btndelete, btnnew, btnsave, btnupdate});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnnew)
                    .addComponent(btnsave))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnupdate)
                    .addComponent(btndelete))
                .addContainerGap())
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btndelete, btnnew, btnsave, btnupdate});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 760, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7))
                                .addGap(70, 70, 70)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(rdonam)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 197, Short.MAX_VALUE)
                                        .addComponent(rdonu))
                                    .addComponent(txtmasv, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtname, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtsdt)
                                    .addComponent(txtemail)
                                    .addComponent(jScrollPane1))))
                        .addGap(55, 55, 55)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(77, 77, 77))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jLabel1)
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtmasv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtemail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtsdt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(rdonam)
                                .addComponent(rdonu)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(74, 74, 74)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtsdtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtsdtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtsdtActionPerformed

    private void btnnewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnnewActionPerformed
        clear();
    }//GEN-LAST:event_btnnewActionPerformed

    private void btnsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsaveActionPerformed
        try {
            // check
            ImageIcon icon = new ImageIcon("src\\Icons\\Task list.png");
            ImageIcon icon2 = new ImageIcon("src\\Icons\\Tick.png");
            // check null
            if (txtmasv.getText().length() == 0) {
                JOptionPane.showMessageDialog(this, "Mã sinh viên không được để trống !", "Thông báo ", 0, icon);
                txtmasv.requestFocus();
                return;
            }
            if (txtname.getText().length() == 0) {
                JOptionPane.showMessageDialog(this, "Họ tên không được để trống !", "Thông báo ", 0, icon);
                txtname.requestFocus();
                return;
            }
            if (txtdchi.getText().length() == 0) {
                JOptionPane.showMessageDialog(this, "Địa chỉ không được để trống !", "Thông báo ", 0, icon);
                txtdchi.requestFocus();
                return;
            }
            if (txtemail.getText().length() == 0) {
                JOptionPane.showMessageDialog(this, "Email không được để trống !", "Thông báo ", 0, icon);
                txtemail.requestFocus();
                return;
            }
            if (txtsdt.getText().length() == 0) {
                JOptionPane.showMessageDialog(this, "Số điện thoại không được để trống !", "Thông báo ", 0, icon);
                txtsdt.requestFocus();
                return;
            }
            // check number
            String sdt = txtsdt.getText();
            if (sdt.length() < 0 || sdt.length() > 15) {
                JOptionPane.showMessageDialog(this, "Số điện thoại phải nằm trong khoảng 1-15 chữ số !", "Thông báo ", 0, icon);
                txtsdt.requestFocus();
                return;
            }
            // Start check email
            String regex = "^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$"; // check regex email 
            boolean matchFound1 = Pattern.matches(regex, txtemail.getText());
            if (!matchFound1) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập đúng định dạng email !");
                return;
            }// End check email
            conn = DriverManager.getConnection(urlDB, usersName, password);
            String gt = "";
            if (rdonam.isSelected()) {
                gt = "1";
            } else {
                gt = "0";
            }
            String id = txtmasv.getText();
            String name = txtname.getText();
            String email = txtemail.getText();
            String address = txtdchi.getText();
            String sql = "INSERT INTO STUDENTS(MASV,HOTEN,EMAIL,SDT,GIOITINH,DIACHI,HINH) VALUES(?,?,?,?,?,?,?)";
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setString(1, id);
            ps.setString(2, name);
            ps.setString(3, email);
            ps.setString(4, sdt);
            ps.setString(5, gt);
            ps.setString(6, address);
            ps.setString(7, picture.trim());
            int x = ps.executeUpdate();
            if (x > 0) {
                JOptionPane.showMessageDialog(this, "Thêm sinh viên thành công !", "Thông báo ", 0, icon2);
                loadDatatoTable();
                showForm();
                return;
            } else {
                JOptionPane.showMessageDialog(this, "Thêm sinh viên thất bại !");
            }
            conn.close();
            ps.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Mã sinh viên đã tồn tại !");
        }
    }//GEN-LAST:event_btnsaveActionPerformed

    private void btndeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteActionPerformed
        try {
            //    Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            conn = DriverManager.getConnection(urlDB, usersName, password);
            String sql = "DELETE FROM GRADE WHERE MASV = ? DELETE FROM STUDENTS WHERE MASV = ?";
            PreparedStatement ps = null;
            ImageIcon icon = new ImageIcon("src\\Icons\\Tick.png");
            ps = conn.prepareStatement(sql);
            ps.setString(1, txtmasv.getText().trim());
            ps.setString(2, txtmasv.getText().trim());
            int x = ps.executeUpdate();
            int choice = JOptionPane.showConfirmDialog(this, "Bạn có chắc muốn xóa sinh viên:" + txtmasv.getText() + " ?");
            if (choice != JOptionPane.YES_OPTION) {
                return;
            }
            if (x > 0) {
                JOptionPane.showMessageDialog(this, "Xóa thành công !", "Thông báo ", 0, icon);
                loadDatatoTable();
                clear();
                return;
            }
            clear();
            ps.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi delete");
        }
    }//GEN-LAST:event_btndeleteActionPerformed

    private void btnupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdateActionPerformed
        try {
            ImageIcon icon = new ImageIcon("src\\Icons\\Tick.png");
            conn = DriverManager.getConnection(urlDB, usersName, password);
            String sql = "UPDATE STUDENTS SET HOTEN = ? , EMAIL = ? , SDT = ?, GIOITINH =?, DIACHI = ?  WHERE MASV = ?";
            PreparedStatement ps = conn.prepareStatement(sql);
            String gt = "";
            if (rdonam.isSelected()) {
                gt = "1";
            } else {
                gt = "0";
            }
            ps.setString(6, txtmasv.getText());
            ps.setString(1, txtname.getText());
            ps.setString(2, txtemail.getText());
            ps.setString(3, txtsdt.getText());
            ps.setString(4, gt);
            ps.setString(5, txtdchi.getText());
            int x = ps.executeUpdate();
            if (x > 0) {
                JOptionPane.showMessageDialog(this, "Update thành công !", "Thông báo ", 0, icon);
            }
            loadDatatoTable();
            showForm();
            ps.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi update");
        }
    }//GEN-LAST:event_btnupdateActionPerformed

    private void tblsvienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblsvienMouseClicked
        _index = tblsvien.getSelectedRow();
        if (_index < 0) {
            return;
        }
        showForm();
    }//GEN-LAST:event_tblsvienMouseClicked

    private void lblimgMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblimgMouseClicked
        try {
            JFileChooser fcho = new JFileChooser();
            int result = fcho.showOpenDialog(null);
            if (result == JFileChooser.APPROVE_OPTION) {
                File file = fcho.getSelectedFile();
                String fullPath = file.getAbsolutePath();
                picture = fcho.getSelectedFile().getName();
                UpImg(fullPath);
                Path src = Paths.get(fullPath);
                Path des = Paths.get("src\\Images\\" + picture);
                Files.copy(src, des, StandardCopyOption.REPLACE_EXISTING);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi chọn ảnh !");
            return;
        }
    }//GEN-LAST:event_lblimgMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SinhVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SinhVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SinhVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SinhVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SinhVien().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btndelete;
    private javax.swing.JButton btnnew;
    private javax.swing.JButton btnsave;
    private javax.swing.JButton btnupdate;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblimg;
    private javax.swing.JRadioButton rdonam;
    private javax.swing.JRadioButton rdonu;
    private javax.swing.JTable tblsvien;
    private javax.swing.JTextArea txtdchi;
    private javax.swing.JTextField txtemail;
    private javax.swing.JTextField txtmasv;
    private javax.swing.JTextField txtname;
    private javax.swing.JTextField txtsdt;
    // End of variables declaration//GEN-END:variables

    private void loadDatatoTable() {
        try {
            conn = DriverManager.getConnection(urlDB, usersName, password);
            String sql = "SELECT *FROM STUDENTS";
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            _model.setRowCount(0);
            if (rs.isBeforeFirst() == false) {
                JOptionPane.showMessageDialog(this, "Danh sách sinh viên trống !");
                return;
            }
            while (rs.next()) {
                Vector sv = new Vector();
                sv.add(rs.getString("MASV"));
                sv.add(rs.getString("HOTEN"));
                sv.add(rs.getString("EMAIL"));
                sv.add(rs.getString("SDT"));
                String gt = "";
                if(rs.getString("GIOITINH").equals("1")) {
                    gt = "Nam";
                } else {
                    gt = "Nữ";
                }
                sv.add(gt);
                sv.add(rs.getString("DIACHI"));
                sv.add(rs.getString("HINH"));
                _model.addRow(sv);
            }
            tblsvien.setModel(_model);
            conn.close();
            st.close();
            rs.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void clear() {
        txtdchi.setText("");
        txtemail.setText("");
        txtname.setText("");
        txtmasv.setText("");
        txtsdt.setText("");
        rdonam.setSelected(true);
        UpImg("");
    }

    private void showForm() {
        txtmasv.setText(tblsvien.getValueAt(_index, 0).toString());
        txtname.setText(tblsvien.getValueAt(_index, 1).toString());
        txtemail.setText(tblsvien.getValueAt(_index, 2).toString());
        txtsdt.setText(tblsvien.getValueAt(_index, 3).toString());
        String gioitinh = (tblsvien.getValueAt(_index, 4).toString());
        if (gioitinh.equals("Nam")) {
            rdonam.setSelected(true);
        } else {
            rdonu.setSelected(true);
        }
        txtdchi.setText(tblsvien.getValueAt(_index, 5).toString());
        UpImg(tblsvien.getValueAt(_index, 6).toString());
    }

    private void UpImg(String hinh) {
        ImageIcon img = new ImageIcon("src\\Images\\" + hinh);
        Image im = img.getImage();
        ImageIcon icon = new ImageIcon(im.getScaledInstance(lblimg.getWidth(), lblimg.getHeight(), im.SCALE_SMOOTH));
        lblimg.setIcon(icon);
    }
}
